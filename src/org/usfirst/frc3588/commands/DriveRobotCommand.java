// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3588.commands;

import org.usfirst.frc3588.Robot;
import org.usfirst.frc3588.RobotMap;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.RobotDrive.MotorType;
import edu.wpi.first.wpilibj.command.Command;

/**
 *
 */
public class  DriveRobotCommand extends Command {

    public DriveRobotCommand() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveMotors);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
	protected void initialize() {
    	RobotMap.driveMotorsRobotDrive.setInvertedMotor(MotorType.kFrontLeft, true);
    	RobotMap.driveMotorsRobotDrive.setInvertedMotor(MotorType.kRearLeft, true);
	}

	// Called repeatedly when this Command is scheduled to run
	protected void execute() {
		Joystick stick = Robot.oi.joystick;
//		DriverStation.reportError(Double.toString(-Robot.oi.joystick.getX()), false);
		RobotMap.driveMotorsRobotDrive.mecanumDrive_Cartesian(-stick.getX(), -stick.getY(), -stick.getRawAxis(5), 0);
//		RobotMap.driveMotorsRobotDrive.mecanumDrive_Polar(stick.getMagnitude(), stick.getDirectionDegrees(), stick.getTwist());
		Timer.delay(0.005);
	}

	// Make this return true when this Command no longer needs to run execute()
	protected boolean isFinished() {
		return false;
	}

	// Called once after isFinished returns true
	protected void end() {
//		RobotMap.driveMotorsRobotDrive.stopMotor();
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	protected void interrupted() {
//		end();
	}
}
